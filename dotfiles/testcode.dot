digraph tree {
    "['1', 'FileAST']";
    "['11', 'FuncDef']";
    "['111', 'Decl']";
    "['1111', 'FuncDecl']";
    "['11111', 'main']";
    "['111111', 'int']";
    "['112', 'Compound']";
    "['1121', 'Decl']";
    "['11211', 'rows']";
    "['112111', 'int']";
    "['1122', 'Decl']";
    "['11221', 'out']";
    "['112211', 'char']";
    "['1123', 'For']";
    "['11231', 'DeclList']";
    "['112311', 'Decl']";
    "['1123111', 'i']";
    "['11231111', 'int']";
    "['1123112', '1']";
    "['11232', '<=']";
    "['112321', 'i']";
    "['112322', 'rows']";
    "['11233', '++']";
    "['112331', 'i']";
    "['11234', 'Compound']";
    "['112341', 'For']";
    "['1123411', 'DeclList']";
    "['11234111', 'Decl']";
    "['112341111', 'j']";
    "['1123411111', 'int']";
    "['112341112', '1']";
    "['1123412', '<=']";
    "['11234121', 'j']";
    "['11234122', 'i']";
    "['1123413', '++']";
    "['11234131', 'j']";
    "['1123414', 'Compound']";
    "['11234141', '=']";
    "['112341411', 'out']";
    "['112341412', \"'*\\\\n'\"]";
    "['1124', 'Return']";
    "['11241', '0']";
    "['1', 'FileAST']" -> "['11', 'FuncDef']";
    "['11', 'FuncDef']" -> "['111', 'Decl']";
    "['11', 'FuncDef']" -> "['112', 'Compound']";
    "['111', 'Decl']" -> "['1111', 'FuncDecl']";
    "['1111', 'FuncDecl']" -> "['11111', 'main']";
    "['11111', 'main']" -> "['111111', 'int']";
    "['112', 'Compound']" -> "['1121', 'Decl']";
    "['112', 'Compound']" -> "['1122', 'Decl']";
    "['112', 'Compound']" -> "['1123', 'For']";
    "['112', 'Compound']" -> "['1124', 'Return']";
    "['1121', 'Decl']" -> "['11211', 'rows']";
    "['11211', 'rows']" -> "['112111', 'int']";
    "['1122', 'Decl']" -> "['11221', 'out']";
    "['11221', 'out']" -> "['112211', 'char']";
    "['1123', 'For']" -> "['11231', 'DeclList']";
    "['1123', 'For']" -> "['11232', '<=']";
    "['1123', 'For']" -> "['11233', '++']";
    "['1123', 'For']" -> "['11234', 'Compound']";
    "['11231', 'DeclList']" -> "['112311', 'Decl']";
    "['112311', 'Decl']" -> "['1123111', 'i']";
    "['112311', 'Decl']" -> "['1123112', '1']";
    "['1123111', 'i']" -> "['11231111', 'int']";
    "['11232', '<=']" -> "['112321', 'i']";
    "['11232', '<=']" -> "['112322', 'rows']";
    "['11233', '++']" -> "['112331', 'i']";
    "['11234', 'Compound']" -> "['112341', 'For']";
    "['112341', 'For']" -> "['1123411', 'DeclList']";
    "['112341', 'For']" -> "['1123412', '<=']";
    "['112341', 'For']" -> "['1123413', '++']";
    "['112341', 'For']" -> "['1123414', 'Compound']";
    "['1123411', 'DeclList']" -> "['11234111', 'Decl']";
    "['11234111', 'Decl']" -> "['112341111', 'j']";
    "['11234111', 'Decl']" -> "['112341112', '1']";
    "['112341111', 'j']" -> "['1123411111', 'int']";
    "['1123412', '<=']" -> "['11234121', 'j']";
    "['1123412', '<=']" -> "['11234122', 'i']";
    "['1123413', '++']" -> "['11234131', 'j']";
    "['1123414', 'Compound']" -> "['11234141', '=']";
    "['11234141', '=']" -> "['112341411', 'out']";
    "['11234141', '=']" -> "['112341412', \"'*\\\\n'\"]";
    "['1124', 'Return']" -> "['11241', '0']";
}
